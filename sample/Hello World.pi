/**
 * The file name says it all
 * 
 * Authors: Vasco T. Vasconcelos and Juliana Franco
 * 
 * Version: $Id: helloWorld.pi 1110 2013-08-29 23:54:40Z vv $
 */
 
// First, create a channel on which a string must be exchanged. Channels
// are synchronous, bi-directional, and defined by their two ends.

new readerEnd writerEnd: ?string.end

// readerEnd is the channel end on which processes can read
// writerEnd is the channel end on which processes can write

// readerEnd is of type ?string.end, a type that allows a string to be
// read and then allows no further interaction on the channel end
// writerEnd is of type !string.end, a type that allows a string to be
// written and then allows no further interaction on the channel end

// Then, setup the writer process.

writerEnd!"Hello world!" |

// The writer is a process that writes (!) a string on writerEnd

// Finally, and in parallel (denoted by the vertical bar), setup the reader

readerEnd?x. printString!x

// The reader is a process that reads (?) a string from the readerEnd and then
// (denoted by the dot) prints the string on the console. printString is a
// primitive channel end which strings may be sent to the console.


